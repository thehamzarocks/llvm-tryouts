I saw a function called main!

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %c1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 5, i32* %a, align 4
  store i32 7, i32* %b, align 4
  %2 = load i32, i32* %a, align 4
  %3 = load i32, i32* %b, align 4
  %4 = icmp sgt i32 %2, %3
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = load i32, i32* %a, align 4
  %7 = load i32, i32* %b, align 4
  %8 = add nsw i32 %6, %7
  store i32 %8, i32* %c, align 4
  br label %10

; <label>:9                                       ; preds = %0
  br label %10

; <label>:10                                      ; preds = %9, %5
  %11 = load i32, i32* %a, align 4
  %12 = load i32, i32* %b, align 4
  %13 = add nsw i32 %11, %12
  store i32 %13, i32* %c1, align 4
  ret i32 0
}

I saw a basic block
I saw a basic block
I saw a basic block
I saw a basic block


Avail Ins
-  %b = alloca i32, align 4	 => 0
-  store i32 7, i32* %b, align 4	 => 0
-  %1 = alloca i32, align 4	 => 0
-  store i32 0, i32* %1, align 4	 => 0
-  %a = alloca i32, align 4	 => 0
-  %2 = load i32, i32* %a, align 4	 => 0
-  %3 = load i32, i32* %b, align 4	 => 0
-  %6 = load i32, i32* %a, align 4	 => 0
-  store i32 5, i32* %a, align 4	 => 0
-  %4 = icmp sgt i32 %2, %3	 => 0
-  br i1 %4, label %5, label %9	 => 0
-  %c = alloca i32, align 4	 => 0
-  %7 = load i32, i32* %b, align 4	 => 0
-  %8 = add nsw i32 %6, %7	 => 0
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 0
-  %c1 = alloca i32, align 4	 => 0
-  %11 = load i32, i32* %a, align 4	 => 0
-  %12 = load i32, i32* %b, align 4	 => 0
-  %13 = add nsw i32 %11, %12	 => 0
-  store i32 %13, i32* %c1, align 4	 => 1
-  ret i32 0	 => 1

Avail Outs
-  %b = alloca i32, align 4	 => 0
-  store i32 7, i32* %b, align 4	 => 0
-  %1 = alloca i32, align 4	 => 0
-  store i32 0, i32* %1, align 4	 => 0
-  %a = alloca i32, align 4	 => 0
-  %2 = load i32, i32* %a, align 4	 => 0
-  %3 = load i32, i32* %b, align 4	 => 0
-  %6 = load i32, i32* %a, align 4	 => 0
-  store i32 5, i32* %a, align 4	 => 0
-  %4 = icmp sgt i32 %2, %3	 => 0
-  br i1 %4, label %5, label %9	 => 0
-  %c = alloca i32, align 4	 => 0
-  %7 = load i32, i32* %b, align 4	 => 0
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 0
-  %c1 = alloca i32, align 4	 => 0
-  %11 = load i32, i32* %a, align 4	 => 0
-  %12 = load i32, i32* %b, align 4	 => 0
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 1
-  ret i32 0	 => 1


Ant Ins
-  %b = alloca i32, align 4	 => 1
-  store i32 7, i32* %b, align 4	 => 1
-  %1 = alloca i32, align 4	 => 1
-  store i32 0, i32* %1, align 4	 => 1
-  %a = alloca i32, align 4	 => 1
-  %2 = load i32, i32* %a, align 4	 => 1
-  %3 = load i32, i32* %b, align 4	 => 1
-  %6 = load i32, i32* %a, align 4	 => 1
-  store i32 5, i32* %a, align 4	 => 1
-  %4 = icmp sgt i32 %2, %3	 => 1
-  br i1 %4, label %5, label %9	 => 1
-  %c = alloca i32, align 4	 => 1
-  %7 = load i32, i32* %b, align 4	 => 1
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 1
-  %c1 = alloca i32, align 4	 => 1
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 0
-  ret i32 0	 => 0

Ant Outs
-  %b = alloca i32, align 4	 => 1
-  store i32 7, i32* %b, align 4	 => 1
-  %1 = alloca i32, align 4	 => 1
-  store i32 0, i32* %1, align 4	 => 1
-  %a = alloca i32, align 4	 => 1
-  %2 = load i32, i32* %a, align 4	 => 1
-  %3 = load i32, i32* %b, align 4	 => 1
-  %6 = load i32, i32* %a, align 4	 => 1
-  store i32 5, i32* %a, align 4	 => 1
-  %4 = icmp sgt i32 %2, %3	 => 1
-  br i1 %4, label %5, label %9	 => 1
-  %c = alloca i32, align 4	 => 1
-  %7 = load i32, i32* %b, align 4	 => 1
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 1
-  %c1 = alloca i32, align 4	 => 1
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 0
-  store i32 %13, i32* %c1, align 4	 => 0
-  ret i32 0	 => 0


Safe Ins
-  %b = alloca i32, align 4	 => 1
-  store i32 7, i32* %b, align 4	 => 1
-  %1 = alloca i32, align 4	 => 1
-  store i32 0, i32* %1, align 4	 => 1
-  %a = alloca i32, align 4	 => 1
-  %2 = load i32, i32* %a, align 4	 => 1
-  %3 = load i32, i32* %b, align 4	 => 1
-  %6 = load i32, i32* %a, align 4	 => 1
-  store i32 5, i32* %a, align 4	 => 1
-  %4 = icmp sgt i32 %2, %3	 => 1
-  br i1 %4, label %5, label %9	 => 1
-  %c = alloca i32, align 4	 => 1
-  %7 = load i32, i32* %b, align 4	 => 1
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 1
-  %c1 = alloca i32, align 4	 => 1
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 1
-  ret i32 0	 => 1


Safe Outs
-  %b = alloca i32, align 4	 => 1
-  store i32 7, i32* %b, align 4	 => 1
-  %1 = alloca i32, align 4	 => 1
-  store i32 0, i32* %1, align 4	 => 1
-  %a = alloca i32, align 4	 => 1
-  %2 = load i32, i32* %a, align 4	 => 1
-  %3 = load i32, i32* %b, align 4	 => 1
-  %6 = load i32, i32* %a, align 4	 => 1
-  store i32 5, i32* %a, align 4	 => 1
-  %4 = icmp sgt i32 %2, %3	 => 1
-  br i1 %4, label %5, label %9	 => 1
-  %c = alloca i32, align 4	 => 1
-  %7 = load i32, i32* %b, align 4	 => 1
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 1
-  %c1 = alloca i32, align 4	 => 1
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 1
-  ret i32 0	 => 1
spav in
-  %b = alloca i32, align 4	 => 0
-  store i32 7, i32* %b, align 4	 => 0
-  %1 = alloca i32, align 4	 => 0
-  store i32 0, i32* %1, align 4	 => 0
-  %a = alloca i32, align 4	 => 0
-  %2 = load i32, i32* %a, align 4	 => 0
-  %3 = load i32, i32* %b, align 4	 => 0
-  %6 = load i32, i32* %a, align 4	 => 0
-  store i32 5, i32* %a, align 4	 => 0
-  %4 = icmp sgt i32 %2, %3	 => 0
-  br i1 %4, label %5, label %9	 => 0
-  %c = alloca i32, align 4	 => 0
-  %7 = load i32, i32* %b, align 4	 => 0
-  %8 = add nsw i32 %6, %7	 => 0
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 0
-  %c1 = alloca i32, align 4	 => 0
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 1
-  ret i32 0	 => 1
spav out
-  %b = alloca i32, align 4	 => 0
-  store i32 7, i32* %b, align 4	 => 0
-  %1 = alloca i32, align 4	 => 0
-  store i32 0, i32* %1, align 4	 => 0
-  %a = alloca i32, align 4	 => 0
-  %2 = load i32, i32* %a, align 4	 => 0
-  %3 = load i32, i32* %b, align 4	 => 0
-  %6 = load i32, i32* %a, align 4	 => 0
-  store i32 5, i32* %a, align 4	 => 0
-  %4 = icmp sgt i32 %2, %3	 => 0
-  br i1 %4, label %5, label %9	 => 0
-  %c = alloca i32, align 4	 => 0
-  %7 = load i32, i32* %b, align 4	 => 0
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 0
-  %c1 = alloca i32, align 4	 => 0
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 1
-  ret i32 0	 => 1


spant in
-  %b = alloca i32, align 4	 => 1
-  store i32 7, i32* %b, align 4	 => 1
-  %1 = alloca i32, align 4	 => 1
-  store i32 0, i32* %1, align 4	 => 1
-  %a = alloca i32, align 4	 => 1
-  %2 = load i32, i32* %a, align 4	 => 1
-  %3 = load i32, i32* %b, align 4	 => 1
-  %6 = load i32, i32* %a, align 4	 => 1
-  store i32 5, i32* %a, align 4	 => 1
-  %4 = icmp sgt i32 %2, %3	 => 1
-  br i1 %4, label %5, label %9	 => 1
-  %c = alloca i32, align 4	 => 1
-  %7 = load i32, i32* %b, align 4	 => 1
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 1
-  %c1 = alloca i32, align 4	 => 1
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 1
-  store i32 %13, i32* %c1, align 4	 => 0
-  ret i32 0	 => 0
spant out
-  %b = alloca i32, align 4	 => 1
-  store i32 7, i32* %b, align 4	 => 1
-  %1 = alloca i32, align 4	 => 1
-  store i32 0, i32* %1, align 4	 => 1
-  %a = alloca i32, align 4	 => 1
-  %2 = load i32, i32* %a, align 4	 => 1
-  %3 = load i32, i32* %b, align 4	 => 1
-  %6 = load i32, i32* %a, align 4	 => 1
-  store i32 5, i32* %a, align 4	 => 1
-  %4 = icmp sgt i32 %2, %3	 => 1
-  br i1 %4, label %5, label %9	 => 1
-  %c = alloca i32, align 4	 => 1
-  %7 = load i32, i32* %b, align 4	 => 1
-  %8 = add nsw i32 %6, %7	 => 1
-  store i32 %8, i32* %c, align 4	 => 1
-  br label %10	 => 1
-  br label %10	 => 1
-  %c1 = alloca i32, align 4	 => 1
-  %11 = load i32, i32* %a, align 4	 => 1
-  %12 = load i32, i32* %b, align 4	 => 1
-  %13 = add nsw i32 %11, %12	 => 0
-  store i32 %13, i32* %c1, align 4	 => 0
-  ret i32 0	 => 0
The points of insertion are:
  %8 = add nsw i32 %6, %7
The edges to be considered for insertion are those between
  br label %10 and   %11 = load i32, i32* %a, align 4
The points of replcaement are:
  %8 = add nsw i32 %6, %7
  %13 = add nsw i32 %11, %12
